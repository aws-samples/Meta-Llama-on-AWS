AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy resources required to run text2sql with Llama models from SageMaker JumpStart.

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default

  VPCLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: 7

  VPCLogRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: vpc-flow-logs.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !GetAtt LogsPolicy.PolicyArn

  LogsPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Path: /
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource: '*'

  VPCFlowLog:
    Type: "AWS::EC2::FlowLog"
    Properties:
      ResourceId: !Ref VPC
      ResourceType: VPC
      TrafficType: ALL
      LogGroupName: !Ref VPCLogGroup
      DeliverLogsPermissionArn: !GetAtt [ VPCLogRole, Arn ]
  
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: JumpStartVPCIGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SageMakerSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: SageMakerSubnet

  SageMakerSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: SageMakerSubnet2

  SageMakerSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SageMakerSubnet
      RouteTableId: !Ref PublicRouteTable

  SageMakerSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SageMakerSubnet2
      RouteTableId: !Ref PublicRouteTable

  DBSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: DBSubnet1

  DBSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: DBSubnet2

  SageMakerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for SageMaker resources
      VpcId: !Ref VPC
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: SageMakerSecurityGroup

  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: 'Database instances security group'
      Tags:
        - Key: Name
          Value: RDSSecurityGroup

  RDSSecurityGroupIngressMySQL:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref RDSSecurityGroup
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      SourceSecurityGroupId: !Ref SageMakerSecurityGroup

  RDSSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: Subnets to launch db instances into
      SubnetIds: 
      - !Ref DBSubnet1
      - !Ref DBSubnet2

  DatabaseInstanceMySQL:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.micro
      Engine: MySQL
      PubliclyAccessible: false
      AllocatedStorage: 8
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref RDSSecretMySQL, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref RDSSecretMySQL, ':SecretString:password}}' ]]
      DBSubnetGroupName: !Ref RDSSubnetGroup
      StorageEncrypted: true
      VPCSecurityGroups: 
        - !Ref RDSSecurityGroup
  
  SageMakerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
      Path: /service-role/
      Policies:
        - PolicyName: SageMakerS3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - arn:aws:s3:::jumpstart-cache-prod-*
                  - arn:aws:s3:::sagemaker-*

  SageMakerNotebookInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
      Policies:
        - PolicyName: SecretsManagerAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'secretsmanager:GetSecretValue'
                Resource: !Ref RDSSecretMySQL
        - PolicyName: SageMakerJumpStartPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sagemaker:CreateModel
                  - sagemaker:CreateEndpointConfig
                  - sagemaker:CreateEndpoint
                  - sagemaker:DescribeModel
                  - sagemaker:DescribeEndpoint
                  - sagemaker:DescribeEndpointConfig
                  - sagemaker:InvokeEndpoint
                  - sagemaker:DeleteModel
                  - sagemaker:DeleteEndpoint
                  - sagemaker:DeleteEndpointConfig
                  - sagemaker:UpdateEndpoint
                Resource: '*'
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - arn:aws:s3:::jumpstart-cache-prod-*
                  - arn:aws:s3:::sagemaker-*
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !GetAtt SageMakerExecutionRole.Arn
        - PolicyName: CloudFormationReadOnlyAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'cloudformation:DescribeStackResources'
                  - 'cloudformation:DescribeStacks'
                Resource: !Join
                  - ''
                  - - 'arn:aws:cloudformation:'
                    - !Ref 'AWS::Region'
                    - ':'
                    - !Ref 'AWS::AccountId'
                    - ':stack/'
                    - !Ref 'AWS::StackName'
                    - '/*'

  SageMakerNotebook:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      InstanceType: ml.g5.2xlarge  # GPU instance for LLMs
      RoleArn: !GetAtt SageMakerNotebookInstanceRole.Arn
      SubnetId: !Ref SageMakerSubnet
      InstanceMetadataServiceConfiguration:
        MinimumInstanceMetadataServiceVersion: 2
      SecurityGroupIds:
        - !Ref SageMakerSecurityGroup
      VolumeSizeInGB: 100  # Larger volume for model storage
      DefaultCodeRepository: !GetAtt CodeRepository.CodeRepositoryName
      LifecycleConfigName: !GetAtt NotebookLifecycleConfig.NotebookInstanceLifecycleConfigName

  NotebookLifecycleConfig:
    Type: AWS::SageMaker::NotebookInstanceLifecycleConfig
    Properties:
      OnStart:
        - Content: !Base64 |
            #!/bin/bash
            set -e
            sudo -u ec2-user -i <<'EOF'
            # Install MySQL client
            sudo yum install -y mysql
            
            # Install additional Python packages
            pip install --upgrade pip
            pip install pymysql sqlalchemy boto3 pandas
            
            # Setup JupyterLab extensions
            pip install jupyter-server-proxy
            
            echo "Lifecycle configuration completed"
            EOF

  CodeRepository:
    Type: AWS::SageMaker::CodeRepository
    Properties:
      GitConfig:
        RepositoryUrl: https://github.com/aws-samples/Meta-Llama-on-AWS.git
        Branch: main

  RDSSecretMySQL: 
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Secrets for MySQL RDS instance made from cloudformation template
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey: 'password'
        PasswordLength: 16
        ExcludeCharacters: '"@/\'

Outputs:
  DatabaseEndpointMySQL:
    Description: The connection endpoint for the database
    Value: !GetAtt DatabaseInstanceMySQL.Endpoint.Address

  SecretArnMySQL:
    Description: The ARN of the secret
    Value: !Ref RDSSecretMySQL

  SageMakerNotebookURL:
    Description: SageMaker Notebook Instance
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt SageMakerNotebook.NotebookInstanceName
        - '.notebook.'
        - !Ref AWS::Region
        - '.sagemaker.aws/lab'

  SageMakerExecutionRoleARN:
    Description: ARN of the SageMaker execution role for deploying models
    Value: !GetAtt SageMakerExecutionRole.Arn
